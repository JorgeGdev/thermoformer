---
import Layout from "../../layouts/DashboardLayout.astro";
import GetISOBySize from "../../react/GetISOBySize";
import { ACTIVE_SIZES } from "../../config/sizes";
import WarpBackground from "../../react/WarpBackground.tsx";

const sizes = ACTIVE_SIZES;
const param = Astro.params.size ?? "";
const num = Number(param);

// ¬øes un size v√°lido?
const valid = sizes.includes(num as (typeof sizes)[number]);

// Si es v√°lido, lo casteamos al tipo literal
const sizeLiteral = valid ? (num as (typeof sizes)[number]) : null;
---

<Layout title={`Get ISO ‚Ä¢ Size ${valid ? num : ""}`}>
  <!-- Shader Background -->
  <WarpBackground client:load style={{ background: 'linear-gradient(135deg, #65BB45, #4A9B35, #65BB45)' }} />
  <div class="max-w-5xl mx-auto">
    {valid ? (
      <>
        <h2 class="text-lg font-semibold mb-4">
          Size {num} ‚Äî choose shift & thermoformer
        </h2>
        {/* üëá aqu√≠ usamos ! para quitar null */}
        <GetISOBySize client:load size={sizeLiteral!} />
      </>
    ) : (
      <>
        <h2 class="text-lg font-semibold mb-2">Invalid size</h2>
        <p class="opacity-80">Valid sizes: {ACTIVE_SIZES.join(", ")}.</p>
      </>
    )}
    <a href="/iso" class="inline-block mt-6 text-white-600 hover:underline text-xl">
      ‚Üê Back to sizes
    </a>
  </div>
</Layout>
