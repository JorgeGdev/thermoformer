---
import "../styles/global.css";  // 
import "../styles/layout.css";  // 
import IconNavigation from "../react/IconNavigation.tsx";
const { title = "Dashboard" } = Astro.props;
---
<html lang="en" class="h-full">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title} • Plixies</title>
    
    <!-- Script para aplicar dark mode inmediatamente sin flash -->
    <script is:inline>
      (function() {
        const savedDarkMode = localStorage.getItem('darkMode');
        if (savedDarkMode === 'enabled') {
          document.documentElement.classList.add('dark');
        } else if (savedDarkMode === null) {
          // Usuario nuevo - establecer light mode por defecto
          localStorage.setItem('darkMode', 'disabled');
        }
      })();
    </script>
  </head>
  <body class="h-screen">
    <div class="flex h-full">
      <!-- Mobile Menu Overlay -->
      <div id="mobile-overlay" class="">
      </div>

      <!-- Sidebar - Auto-hide on desktop, slide in when open on mobile -->
      <aside id="sidebar" class="sidebar-auto-hide fixed lg:relative z-50 w-56 h-full transform -translate-x-full lg:translate-x-0 transition-all duration-300 ease-in-out border-r">
        <!-- Mobile header with close button -->
        <div class="flex items-center justify-between p-4 lg:hidden">
          <div >Plixies</div>
          <button 
            id="close-menu" 
            class="p-2"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <!-- Desktop header - title on top -->
        <div class="hidden lg:block p-4 border-b">
          <div class="text-center font-bold text-xl mb-2">Plixies</div>
          <div class="text-center text-xs">Dashboard</div>
        </div>
        
        <!-- Icon Navigation -->
        <div class="flex-1">
          <IconNavigation client:load />
        </div>
      </aside>

      <!-- Main content -->
      <div class="flex-1 flex flex-col min-w-0 main-content-shift">
        <!-- Header with hamburger menu -->
        <header class="flex items-center justify-between px-4 h-14">
          <div class="flex items-center gap-3">
            <!-- Hamburger menu button - only visible on mobile -->
            <button 
              id="hamburger-menu" 
              class="lg:hidden p-2 "
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
            <h1 class="text-base font-medium">{title}</h1>
          </div>
          
          <!-- Dark mode toggle mejorado -->
          <div class="flex items-center">
            <button
              id="dark-toggle"
              class="dark-toggle"
              aria-label="Toggle dark mode"
              role="switch"
            >
              <div class="dark-toggle-slider">
                <div class="toggle-icon sun-icon">
                  <svg fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
                  </svg>
                </div>
                <div class="toggle-icon moon-icon">
                  <svg fill="currentColor" viewBox="0 0 20 20">
                    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                  </svg>
                </div>
              </div>
            </button>
            <span class="mode-text light" id="mode-text">Light</span>
          </div>
        </header>

        <!-- Main content area -->
        <main class="p-4 overflow-auto flex-1">
          <slot />
        </main>

        <!-- Footer -->
        <footer class="footer">
          <div class="footer-content">
            <span>© 2025 Made with</span>
            <span class="footer-heart">♥</span>
            <span>by</span>
            <a href="#" class="footer-link">Cheeky Mango AI Studio</a>
          </div>
        </footer>
      </div>
    </div>

    <!-- JavaScript for mobile menu and desktop auto-hide -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', function() {
        const hamburgerMenu = document.getElementById('hamburger-menu');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('mobile-overlay');
        const closeMenu = document.getElementById('close-menu');
        const darkToggle = document.getElementById('dark-toggle');
        const modeText = document.getElementById('mode-text');

        // Desktop auto-hide behavior
        function initDesktopAutoHide() {
          if (window.innerWidth >= 1024 && sidebar) {
            sidebar.addEventListener('mouseenter', function() {
              sidebar.classList.add('show');
            });

            sidebar.addEventListener('mouseleave', function() {
              setTimeout(() => {
                sidebar.classList.remove('show');
              }, 500);
            });

            // Hover zone
            const hoverZone = document.createElement('div');
            hoverZone.className = 'fixed top-0 left-0 w-8 h-full z-40 hidden lg:block';
            hoverZone.addEventListener('mouseenter', function() {
              sidebar.classList.add('show');
            });
            document.body.appendChild(hoverZone);
          }
        }

        // Mobile menu functions
        function openMenu() {
          if (sidebar && overlay && window.innerWidth < 1024) {
            sidebar.classList.remove('-translate-x-full');
            sidebar.classList.add('translate-x-0');
            overlay.classList.remove('hidden');
            document.body.classList.add('overflow-hidden');
          }
        }

        function closeMenuFn() {
          if (sidebar && overlay) {
            sidebar.classList.add('-translate-x-full');
            sidebar.classList.remove('translate-x-0');
            overlay.classList.add('hidden');
            document.body.classList.remove('overflow-hidden');
          }
        }

        // Dark mode functions
        function updateToggleState() {
          const isDark = document.documentElement.classList.contains('dark');
          
          if (darkToggle && modeText) {
            if (isDark) {
              darkToggle.classList.add('dark');
              modeText.textContent = 'Dark';
              modeText.className = 'mode-text dark';
            } else {
              darkToggle.classList.remove('dark');
              modeText.textContent = 'Light';
              modeText.className = 'mode-text light';
            }
          }
        }

        // Event listeners
        if (hamburgerMenu) hamburgerMenu.addEventListener('click', openMenu);
        if (closeMenu) closeMenu.addEventListener('click', closeMenuFn);
        if (overlay) overlay.addEventListener('click', closeMenuFn);

        // Dark mode toggle
        if (darkToggle) {
          darkToggle.addEventListener('click', function() {
            const isDark = document.documentElement.classList.toggle('dark');
            localStorage.setItem('darkMode', isDark ? 'enabled' : 'disabled');
            updateToggleState();
          });
        }

        // Load dark mode preference
        const savedDarkMode = localStorage.getItem('darkMode');
        if (savedDarkMode === 'enabled') {
          document.documentElement.classList.add('dark');
        } else if (savedDarkMode === null) {
          localStorage.setItem('darkMode', 'disabled');
        }
        
        updateToggleState();
        initDesktopAutoHide();

        // Navigation links
        if (sidebar) {
          sidebar.addEventListener('click', function(e) {
            if (e.target && e.target.closest && e.target.closest('a[href]')) {
              if (window.innerWidth < 1024) {
                closeMenuFn();
              }
            }
          });
        }

        // Window resize
        window.addEventListener('resize', function() {
          if (window.innerWidth >= 1024) {
            closeMenuFn();
            setTimeout(initDesktopAutoHide, 100);
          }
        });

        // Keyboard navigation
        document.addEventListener('keydown', function(e) {
          if (e.key === 'Escape') {
            closeMenuFn();
          }
        });
      });
    </script>
  </body>
</html>
