---
import "../styles/global.css";  // ⬅️ IMPORTANTE
import IconNavigation from "../react/IconNavigation.tsx";
const { title = "Dashboard" } = Astro.props;
---
<html lang="en" class="h-full">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title} • Plixies</title>
    
    <!-- Script para aplicar dark mode inmediatamente sin flash -->
    <script is:inline>
      (function() {
        const savedDarkMode = localStorage.getItem('darkMode');
        if (savedDarkMode === 'enabled') {
          document.documentElement.classList.add('dark');
        } else if (savedDarkMode === null) {
          // Usuario nuevo - establecer light mode por defecto
          localStorage.setItem('darkMode', 'disabled');
        }
      })();
    </script>
    
    <style>
      /* Dark Mode Toggle Styles */
      .dark-toggle {
        position: relative;
        display: inline-flex;
        align-items: center;
        background: linear-gradient(135deg, #fbbf24, #f59e0b);
        width: 52px;
        height: 28px;
        border-radius: 14px;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 2px 8px rgba(251, 191, 36, 0.3);
        border: 2px solid rgba(255, 255, 255, 0.1);
        flex-shrink: 0;
      }
      
      .dark-toggle.dark {
        background: linear-gradient(135deg, #1e293b, #334155);
        box-shadow: 0 2px 8px rgba(30, 41, 59, 0.4);
      }
      
      .dark-toggle-slider {
        position: absolute;
        left: 2px;
        top: 2px;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: white;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      }
      
      .dark-toggle.dark .dark-toggle-slider {
        transform: translateX(24px);
        background: #64748b;
      }
      
      .toggle-icon {
        width: 12px;
        height: 12px;
        transition: all 0.4s ease;
      }
      
      .sun-icon {
        color: #f59e0b;
        opacity: 1;
      }
      
      .moon-icon {
        color: #e2e8f0;
        opacity: 0;
        position: absolute;
      }
      
      .dark .sun-icon {
        opacity: 0;
        transform: rotate(180deg);
      }
      
      .dark .moon-icon {
        opacity: 1;
        transform: rotate(0deg);
      }
      
      .dark-toggle:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(251, 191, 36, 0.4);
      }
      
      .dark-toggle.dark:hover {
        box-shadow: 0 4px 12px rgba(30, 41, 59, 0.6);
      }
      
      .dark-toggle:active {
        transform: scale(0.95);
      }

      .mode-text {
        margin-left: 8px;
        font-size: 0.75rem;
        font-weight: 500;
        transition: all 0.3s ease;
        display: none;
      }

      @media (min-width: 640px) {
        .mode-text {
          display: block;
        }
      }
      
      .mode-text.light {
        color: #f59e0b;
      }
      
      .mode-text.dark {
        color: #94a3b8;
      }

      /* Auto-hide Sidebar Styles for Desktop */
      @media (min-width: 1024px) {
        .sidebar-auto-hide {
          width: 4px;
          transform: translateX(-220px);
          transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
          border-right: none;
          background: transparent;
        }
        
        .sidebar-auto-hide::before {
          content: '';
          position: absolute;
          top: 0;
          right: 0;
          width: 4px;
          height: 100%;
          background: linear-gradient(135deg, #3b82f6, #1d4ed8);
          border-radius: 0 2px 2px 0;
          opacity: 0.4;
          transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }
        
        .sidebar-auto-hide:hover::before {
          opacity: 1;
          box-shadow: 0 0 8px rgba(59, 130, 246, 0.4);
        }
        
        .sidebar-auto-hide:hover,
        .sidebar-auto-hide.show {
          width: 224px;
          transform: translateX(0);
          background: white;
          border-right: 1px solid rgb(226 232 240);
          box-shadow: 4px 0 20px rgba(0, 0, 0, 0.08);
          transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }
        
        .dark .sidebar-auto-hide:hover,
        .dark .sidebar-auto-hide.show {
          background: rgb(30 41 59);
          border-right: 1px solid rgb(51 65 85);
          box-shadow: 4px 0 20px rgba(0, 0, 0, 0.25);
        }

        /* Smooth content shift */
        .main-content-shift {
          margin-left: 4px;
          transition: margin-left 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }
      }

      /* Footer Styles */
      .footer {
        background: linear-gradient(135deg, 
          var(--color-slate-50) 0%, 
          var(--color-slate-100) 100%);
        border-top: 1px solid var(--color-slate-200);
        transition: all 0.3s ease;
      }
      
      .dark .footer {
        background: linear-gradient(135deg, 
          var(--color-slate-900) 0%, 
          var(--color-slate-800) 100%);
        border-top: 1px solid var(--color-slate-700);
      }
      
      .footer-content {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        padding: 0.75rem 1rem;
        font-size: 0.75rem;
        color: rgb(100 116 139);
        transition: color 0.3s ease;
      }
      
      .dark .footer-content {
        color: rgb(148 163 184);
      }
      
      .footer-heart {
        color: rgb(239 68 68);
        animation: heartbeat 2s ease-in-out infinite;
      }
      
      .footer-link {
        color: rgb(59 130 246);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
      }
      
      .footer-link:hover {
        color: rgb(37 99 235);
        background: rgb(239 246 255);
        transform: translateY(-1px);
      }
      
      .dark .footer-link {
        color: rgb(96 165 250);
      }
      
      .dark .footer-link:hover {
        color: rgb(147 197 253);
        background: rgb(30 58 138 / 0.2);
      }
      
      @keyframes heartbeat {
        0%, 50%, 100% { transform: scale(1); }
        25% { transform: scale(1.1); }
        75% { transform: scale(1.05); }
      }
    </style>
  </head>
  <body class="h-screen bg-slate-50 text-slate-900 dark:bg-slate-900 dark:text-slate-100 transition-colors duration-300">
    <div class="flex h-full">
      <!-- Mobile Menu Overlay -->
      <div id="mobile-overlay" class="fixed inset-0 z-40 bg-black/50 hidden lg:hidden">
      </div>

      <!-- Sidebar - Auto-hide on desktop, slide in when open on mobile -->
      <aside id="sidebar" class="sidebar-auto-hide fixed lg:relative z-50 w-56 h-full transform -translate-x-full lg:translate-x-0 transition-all duration-300 ease-in-out border-r border-slate-200 dark:border-slate-700 bg-slate-50 dark:bg-slate-800 lg:flex lg:shrink-0 lg:flex-col">
        <!-- Mobile header with close button -->
        <div class="flex items-center justify-between p-4 lg:hidden">
          <div class="font-semibold text-slate-600 dark:text-slate-400">Plixies</div>
          <button 
            id="close-menu" 
            class="p-2 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <!-- Desktop header - title on top -->
        <div class="hidden lg:block p-4 border-b border-slate-200 dark:border-slate-600">
          <div class="text-center font-bold text-xl text-slate-600 dark:text-slate-400 mb-2">Plixies</div>
          <div class="text-center text-xs text-slate-500 dark:text-slate-400">Dashboard</div>
        </div>
        
        <!-- Icon Navigation -->
        <div class="flex-1">
          <IconNavigation client:load />
        </div>
      </aside>

      <!-- Main content -->
      <div class="flex-1 flex flex-col min-w-0 main-content-shift">
        <!-- Header with hamburger menu -->
        <header class="flex items-center justify-between px-4 h-14 border-b border-slate-200 dark:border-slate-700 bg-slate-50 dark:bg-slate-800 transition-colors duration-300">
          <div class="flex items-center gap-3">
            <!-- Hamburger menu button - only visible on mobile -->
            <button 
              id="hamburger-menu" 
              class="lg:hidden p-2 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-md"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
            <h1 class="text-base font-medium">{title}</h1>
          </div>
          
          <!-- Dark mode toggle mejorado -->
          <div class="flex items-center">
            <button
              id="dark-toggle"
              class="dark-toggle"
              aria-label="Toggle dark mode"
              role="switch"
            >
              <div class="dark-toggle-slider">
                <div class="toggle-icon sun-icon">
                  <svg fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
                  </svg>
                </div>
                <div class="toggle-icon moon-icon">
                  <svg fill="currentColor" viewBox="0 0 20 20">
                    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                  </svg>
                </div>
              </div>
            </button>
            <span class="mode-text light" id="mode-text">Light</span>
          </div>
        </header>

        <!-- Main content area -->
        <main class="p-4 overflow-auto flex-1">
          <slot />
        </main>

        <!-- Footer -->
        <footer class="footer">
          <div class="footer-content">
            <span>© 2025 Made with</span>
            <span class="footer-heart">♥</span>
            <span>by</span>
            <a href="#" class="footer-link">Cheeky Mango AI Studio</a>
          </div>
        </footer>
      </div>
    </div>

    <!-- JavaScript for mobile menu and desktop auto-hide -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', function() {
        const hamburgerMenu = document.getElementById('hamburger-menu');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('mobile-overlay');
        const closeMenu = document.getElementById('close-menu');
        const darkToggle = document.getElementById('dark-toggle');
        const modeText = document.getElementById('mode-text');

        // Desktop auto-hide behavior
        function initDesktopAutoHide() {
          if (window.innerWidth >= 1024 && sidebar) {
            sidebar.addEventListener('mouseenter', function() {
              sidebar.classList.add('show');
            });

            sidebar.addEventListener('mouseleave', function() {
              setTimeout(() => {
                sidebar.classList.remove('show');
              }, 500);
            });

            // Hover zone
            const hoverZone = document.createElement('div');
            hoverZone.className = 'fixed top-0 left-0 w-8 h-full z-40 hidden lg:block';
            hoverZone.addEventListener('mouseenter', function() {
              sidebar.classList.add('show');
            });
            document.body.appendChild(hoverZone);
          }
        }

        // Mobile menu functions
        function openMenu() {
          if (sidebar && overlay && window.innerWidth < 1024) {
            sidebar.classList.remove('-translate-x-full');
            sidebar.classList.add('translate-x-0');
            overlay.classList.remove('hidden');
            document.body.classList.add('overflow-hidden');
          }
        }

        function closeMenuFn() {
          if (sidebar && overlay) {
            sidebar.classList.add('-translate-x-full');
            sidebar.classList.remove('translate-x-0');
            overlay.classList.add('hidden');
            document.body.classList.remove('overflow-hidden');
          }
        }

        // Dark mode functions
        function updateToggleState() {
          const isDark = document.documentElement.classList.contains('dark');
          
          if (darkToggle && modeText) {
            if (isDark) {
              darkToggle.classList.add('dark');
              modeText.textContent = 'Dark';
              modeText.className = 'mode-text dark';
            } else {
              darkToggle.classList.remove('dark');
              modeText.textContent = 'Light';
              modeText.className = 'mode-text light';
            }
          }
        }

        // Event listeners
        if (hamburgerMenu) hamburgerMenu.addEventListener('click', openMenu);
        if (closeMenu) closeMenu.addEventListener('click', closeMenuFn);
        if (overlay) overlay.addEventListener('click', closeMenuFn);

        // Dark mode toggle
        if (darkToggle) {
          darkToggle.addEventListener('click', function() {
            const isDark = document.documentElement.classList.toggle('dark');
            localStorage.setItem('darkMode', isDark ? 'enabled' : 'disabled');
            updateToggleState();
          });
        }

        // Load dark mode preference
        const savedDarkMode = localStorage.getItem('darkMode');
        if (savedDarkMode === 'enabled') {
          document.documentElement.classList.add('dark');
        } else if (savedDarkMode === null) {
          localStorage.setItem('darkMode', 'disabled');
        }
        
        updateToggleState();
        initDesktopAutoHide();

        // Navigation links
        if (sidebar) {
          sidebar.addEventListener('click', function(e) {
            if (e.target && e.target.closest && e.target.closest('a[href]')) {
              if (window.innerWidth < 1024) {
                closeMenuFn();
              }
            }
          });
        }

        // Window resize
        window.addEventListener('resize', function() {
          if (window.innerWidth >= 1024) {
            closeMenuFn();
            setTimeout(initDesktopAutoHide, 100);
          }
        });

        // Keyboard navigation
        document.addEventListener('keydown', function(e) {
          if (e.key === 'Escape') {
            closeMenuFn();
          }
        });
      });
    </script>
  </body>
</html>
